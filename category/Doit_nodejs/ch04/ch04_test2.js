// 이벤트란? UI에 버튼이 있을때, 버튼을 클릭시 발생하는 것을 이벤트라고 한다.
// 이벤트를 처리하는 것이 이벤트핸들러라고 한다.
// 이벤트 핸들러가 받을시 이벤트객체라는 것을 만들어 전달한다.
// ex/리스너, 핸들러..
// ui가 없는경우가 대다수인 서버쪽에서도 이벤트개념이 왜 나올까?
// 서버에서 처리하는 이벤트란?
// 비동기 방식으로 처리하기 위해 한 쪽에서 다른 쪽으로 데이터 전달
// EventEmitter사용
// 한 쪽에서 이벤트를 emit으로 보내고 다른 쪽에서 리스너를 등록하여 on으로 받음

// 모듈로 기능을 분리시, 한쪽 모듈에서 다른쪽 모듈로 데이터를 전달하고 싶을때,
// 같은 프로그램안에서 데이터를 주고받고 싶을때, 이벤트라는 개념을 사용한다

// on()으로 받고,
// emit()으로 준다.

// 이벤트를 받는쪽은 이벤트 리스너,
// 이벤트 리스너를 받는것은 eventEmitter라고 한다. 해당 에미터를 상속하면 이벤트 리스너를 받을 수 있다.
// 이벤트 처리를 하는 가장 대표적인 것이, 프로세스,콘솔(둘다전역객체),

//이벤트를 받기위한 on()메소드. process는 이미 eventEmitter를 상속하고 있는 상태. 따라서 이벤트를 받아서 처리할 수 있다.
//어떤 이벤트를 받는지 구분하기 위해 exit이라는 구분자를 넣어줌
process.on(`exit`);
